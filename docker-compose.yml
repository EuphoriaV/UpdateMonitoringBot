version: '3'

services:
  postgresql:
    container_name: postgresql
    image: postgres:14
    environment:
      - POSTGRES_USER=EuphoriaV
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=scrapper
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  liquibase-migrations:
    container_name: liquibase
    image: liquibase/liquibase:4.18
    restart: on-failure
    depends_on:
      - postgresql
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=EuphoriaV
      - --password=1234
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:

volumes:
  postgres:
  rabbitmq:
  prometheus:
  grafana:
